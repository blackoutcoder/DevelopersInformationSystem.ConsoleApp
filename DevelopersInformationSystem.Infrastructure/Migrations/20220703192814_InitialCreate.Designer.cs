// <auto-generated />
using System;
using DevelopersInformationSystem.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevelopersInformationSystem.Infrastructure.Migrations
{
    [DbContext(typeof(DevInfoContext))]
    [Migration("20220703192814_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DepartmentProject", b =>
                {
                    b.Property<Guid>("ListDepartmentsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListProjectsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ListDepartmentsId", "ListProjectsId");

                    b.HasIndex("ListProjectsId");

                    b.ToTable("DepartmentProject");
                });

            modelBuilder.Entity("DeveloperProject", b =>
                {
                    b.Property<Guid>("ListDevelopersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ListProjectsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ListDevelopersId", "ListProjectsId");

                    b.HasIndex("ListProjectsId");

                    b.ToTable("DeveloperProject");
                });

            modelBuilder.Entity("DevelopersInformationSystem.Infrastructure.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DevelopersInformationSystem.Infrastructure.Entities.Developer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("DevelopersInformationSystem.Infrastructure.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DepartmentProject", b =>
                {
                    b.HasOne("DevelopersInformationSystem.Infrastructure.Entities.Department", null)
                        .WithMany()
                        .HasForeignKey("ListDepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevelopersInformationSystem.Infrastructure.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ListProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeveloperProject", b =>
                {
                    b.HasOne("DevelopersInformationSystem.Infrastructure.Entities.Developer", null)
                        .WithMany()
                        .HasForeignKey("ListDevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DevelopersInformationSystem.Infrastructure.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ListProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DevelopersInformationSystem.Infrastructure.Entities.Developer", b =>
                {
                    b.HasOne("DevelopersInformationSystem.Infrastructure.Entities.Department", "Department")
                        .WithMany("ListDevelopers")
                        .HasForeignKey("DepartmentId");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DevelopersInformationSystem.Infrastructure.Entities.Department", b =>
                {
                    b.Navigation("ListDevelopers");
                });
#pragma warning restore 612, 618
        }
    }
}
